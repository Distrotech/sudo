SUDO(1m)                     System Manager's Manual                    SUDO(1m)

NNAAMMEE
     ssuuddoo, ssuuddooeeddiitt - execute a command as another user

SSYYNNOOPPSSIISS
     ssuuddoo --hh | --KK | --kk | --VV
     ssuuddoo --vv [--AAkknnSS] [--aa _a_u_t_h___t_y_p_e] [--gg _g_r_o_u_p _n_a_m_e | _#_g_i_d] [--pp _p_r_o_m_p_t]
          [--uu _u_s_e_r _n_a_m_e | _#_u_i_d]
     ssuuddoo --ll[_l] [--AAkknnSS] [--aa _a_u_t_h___t_y_p_e] [--gg _g_r_o_u_p _n_a_m_e | _#_g_i_d] [--pp _p_r_o_m_p_t]
          [--UU _u_s_e_r _n_a_m_e] [--uu _u_s_e_r _n_a_m_e | _#_u_i_d] [_c_o_m_m_a_n_d]
     ssuuddoo [--AAbbEEHHnnPPSS] [--aa _a_u_t_h___t_y_p_e] [--CC _f_d] [--cc _c_l_a_s_s | _-]
          [--gg _g_r_o_u_p _n_a_m_e | _#_g_i_d] [--pp _p_r_o_m_p_t] [--rr _r_o_l_e] [--tt _t_y_p_e]
          [--uu _u_s_e_r _n_a_m_e | _#_u_i_d] [VVAARR=_v_a_l_u_e] --ii | --ss [_c_o_m_m_a_n_d]
     ssuuddooeeddiitt [--AAnnSS] [--aa _a_u_t_h___t_y_p_e] [--CC _f_d] [--cc _c_l_a_s_s | _-]
              [--gg _g_r_o_u_p _n_a_m_e | _#_g_i_d] [--pp _p_r_o_m_p_t] [--uu _u_s_e_r _n_a_m_e | _#_u_i_d] file
              ...

DDEESSCCRRIIPPTTIIOONN
     ssuuddoo allows a permitted user to execute a _c_o_m_m_a_n_d as the superuser or
     another user, as specified by the security policy.

     ssuuddoo supports a plugin architecture for security policies and
     input/output logging.  Third parties can develop and distribute their own
     policy and I/O logging plugins to work seamlessly with the ssuuddoo front
     end.  The default security policy is _s_u_d_o_e_r_s, which is configured via the
     file _/_e_t_c_/_s_u_d_o_e_r_s, or via LDAP.  See the _P_l_u_g_i_n_s section for more
     information.

     The security policy determines what privileges, if any, a user has to run
     ssuuddoo.  The policy may require that users authenticate themselves with a
     password or another authentication mechanism.  If authentication is
     required, ssuuddoo will exit if the user's password is not entered within a
     configurable time limit.  This limit is policy-specific; the default
     password prompt timeout for the _s_u_d_o_e_r_s security policy is 5 minutes.

     Security policies may support credential caching to allow the user to run
     ssuuddoo again for a period of time without requiring authentication.  The
     _s_u_d_o_e_r_s policy caches credentials for 5 minutes, unless overridden in
     sudoers(4).  By running ssuuddoo with the --vv option, a user can update the
     cached credentials without running a _c_o_m_m_a_n_d.

     When invoked as ssuuddooeeddiitt, the --ee option (described below), is implied.

     Security policies may log successful and failed attempts to use ssuuddoo.  If
     an I/O plugin is configured, the running command's input and output may
     be logged as well.

     The options are as follows:

     --AA          Normally, if ssuuddoo requires a password, it will read it from
                 the user's terminal.  If the --AA (_a_s_k_p_a_s_s) option is
                 specified, a (possibly graphical) helper program is executed
                 to read the user's password and output the password to the
                 standard output.  If the SUDO_ASKPASS environment variable is
                 set, it specifies the path to the helper program.  Otherwise,
                 if sudo.conf(4) contains a line specifying the askpass
                 program, that value will be used.  For example:

                     # Path to askpass helper program
                     Path askpass /usr/X11R6/bin/ssh-askpass

                 If no askpass program is available, ssuuddoo will exit with an
                 error.

     --aa _t_y_p_e     The --aa (_a_u_t_h_e_n_t_i_c_a_t_i_o_n _t_y_p_e) option causes ssuuddoo to use the
                 specified authentication type when validating the user, as
                 allowed by _/_e_t_c_/_l_o_g_i_n_._c_o_n_f.  The system administrator may
                 specify a list of sudo-specific authentication methods by
                 adding an ``auth-sudo'' entry in _/_e_t_c_/_l_o_g_i_n_._c_o_n_f.  This
                 option is only available on systems that support BSD
                 authentication.

     --bb          The --bb (_b_a_c_k_g_r_o_u_n_d) option tells ssuuddoo to run the given
                 command in the background.  Note that if you use the --bb
                 option you cannot use shell job control to manipulate the
                 process.  Most interactive commands will fail to work
                 properly in background mode.

     --CC _f_d       Normally, ssuuddoo will close all open file descriptors other
                 than standard input, standard output and standard error.  The
                 --CC (_c_l_o_s_e _f_r_o_m) option allows the user to specify a starting
                 point above the standard error (file descriptor three).
                 Values less than three are not permitted.  The security
                 policy may restrict the user's ability to use the --CC option.
                 The _s_u_d_o_e_r_s policy only permits use of the --CC option when the
                 administrator has enabled the _c_l_o_s_e_f_r_o_m___o_v_e_r_r_i_d_e option.

     --cc _c_l_a_s_s    The --cc (_c_l_a_s_s) option causes ssuuddoo to run the specified
                 command with resources limited by the specified login class.
                 The _c_l_a_s_s argument can be either a class name as defined in
                 _/_e_t_c_/_l_o_g_i_n_._c_o_n_f, or a single `-' character.  Specifying a
                 _c_l_a_s_s of - indicates that the command should be run
                 restricted by the default login capabilities for the user the
                 command is run as.  If the _c_l_a_s_s argument specifies an
                 existing user class, the command must be run as root, or the
                 ssuuddoo command must be run from a shell that is already root.
                 This option is only available on systems with BSD login
                 classes.

     --EE          The --EE (_p_r_e_s_e_r_v_e _e_n_v_i_r_o_n_m_e_n_t) option indicates to the
                 security policy that the user wishes to preserve their
                 existing environment variables.  The security policy may
                 return an error if the --EE option is specified and the user
                 does not have permission to preserve the environment.

     --ee          The --ee (_e_d_i_t) option indicates that, instead of running a
                 command, the user wishes to edit one or more files.  In lieu
                 of a command, the string "sudoedit" is used when consulting
                 the security policy.  If the user is authorized by the
                 policy, the following steps are taken:

                  1.   Temporary copies are made of the files to be edited
                       with the owner set to the invoking user.

                  2.   The editor specified by the policy is run to edit the
                       temporary files.  The _s_u_d_o_e_r_s policy uses the
                       SUDO_EDITOR, VISUAL and EDITOR environment variables
                       (in that order).  If none of SUDO_EDITOR, VISUAL or
                       EDITOR are set, the first program listed in the _e_d_i_t_o_r
                       sudoers(4) option is used.

                  3.   If they have been modified, the temporary files are
                       copied back to their original location and the
                       temporary versions are removed.

                 If the specified file does not exist, it will be created.
                 Note that unlike most commands run by _s_u_d_o, the editor is run
                 with the invoking user's environment unmodified.  If, for
                 some reason, ssuuddoo is unable to update a file with its edited
                 version, the user will receive a warning and the edited copy
                 will remain in a temporary file.

     --gg _g_r_o_u_p    Normally, ssuuddoo runs a command with the primary group set to
                 the one specified by the password database for the user the
                 command is being run as (by default, root).  The --gg (_g_r_o_u_p)
                 option causes ssuuddoo to run the command with the primary group
                 set to _g_r_o_u_p instead.  To specify a _g_i_d instead of a _g_r_o_u_p
                 _n_a_m_e, use _#_g_i_d.  When running commands as a _g_i_d, many shells
                 require that the `#' be escaped with a backslash (`\').  If
                 no --uu option is specified, the command will be run as the
                 invoking user (not root).  In either case, the primary group
                 will be set to _g_r_o_u_p.

     --HH          The --HH (_H_O_M_E) option requests that the security policy set
                 the HOME environment variable to the home directory of the
                 target user (root by default) as specified by the password
                 database.  Depending on the policy, this may be the default
                 behavior.

     --hh          The --hh (_h_e_l_p) option causes ssuuddoo to print a short help
                 message to the standard output and exit.

     --ii [_c_o_m_m_a_n_d]
                 The --ii (_s_i_m_u_l_a_t_e _i_n_i_t_i_a_l _l_o_g_i_n) option runs the shell
                 specified by the password database entry of the target user
                 as a login shell.  This means that login-specific resource
                 files such as _._p_r_o_f_i_l_e or _._l_o_g_i_n will be read by the shell.
                 If a command is specified, it is passed to the shell for
                 execution via the shell's --cc option.  If no command is
                 specified, an interactive shell is executed.  ssuuddoo attempts
                 to change to that user's home directory before running the
                 shell.  The security policy shall initialize the environment
                 to a minimal set of variables, similar to what is present
                 when a user logs in.  The _C_o_m_m_a_n_d _E_n_v_i_r_o_n_m_e_n_t section in the
                 sudoers(4) manual documents how the --ii option affects the
                 environment in which a command is run when the _s_u_d_o_e_r_s policy
                 is in use.

     --KK          The --KK (sure _k_i_l_l) option is like --kk except that it removes
                 the user's cached credentials entirely and may not be used in
                 conjunction with a command or other option.  This option does
                 not require a password.  Not all security policies support
                 credential caching.

     --kk [_c_o_m_m_a_n_d]
                 When used alone, the --kk (_k_i_l_l) option to ssuuddoo invalidates the
                 user's cached credentials.  The next time ssuuddoo is run a
                 password will be required.  This option does not require a
                 password and was added to allow a user to revoke ssuuddoo
                 permissions from a _._l_o_g_o_u_t file.  Not all security policies
                 support credential caching.

                 When used in conjunction with a command or an option that may
                 require a password, the --kk option will cause ssuuddoo to ignore
                 the user's cached credentials.  As a result, ssuuddoo will prompt
                 for a password (if one is required by the security policy)
                 and will not update the user's cached credentials.

     --ll[ll] [_c_o_m_m_a_n_d]
                 If no _c_o_m_m_a_n_d is specified, the --ll (_l_i_s_t) option will list
                 the allowed (and forbidden) commands for the invoking user
                 (or the user specified by the --UU option) on the current host.
                 If a _c_o_m_m_a_n_d is specified and is permitted by the security
                 policy, the fully-qualified path to the command is displayed
                 along with any command line arguments.  If _c_o_m_m_a_n_d is
                 specified but not allowed, ssuuddoo will exit with a status value
                 of 1.  If the --ll option is specified with an _l argument (i.e.
                 --llll), or if --ll is specified multiple times, a longer list
                 format is used.

     --nn          The --nn (_n_o_n_-_i_n_t_e_r_a_c_t_i_v_e) option prevents ssuuddoo from prompting
                 the user for a password.  If a password is required for the
                 command to run, ssuuddoo will display an error message and exit.

     --PP          The --PP (_p_r_e_s_e_r_v_e _g_r_o_u_p _v_e_c_t_o_r) option causes ssuuddoo to preserve
                 the invoking user's group vector unaltered.  By default, the
                 _s_u_d_o_e_r_s policy will initialize the group vector to the list
                 of groups the target user is in.  The real and effective
                 group IDs, however, are still set to match the target user.

     --pp _p_r_o_m_p_t   The --pp (_p_r_o_m_p_t) option allows you to override the default
                 password prompt and use a custom one.  The following percent
                 (`%') escapes are supported by the _s_u_d_o_e_r_s policy:

                 %H  expanded to the host name including the domain name (on
                     if the machine's host name is fully qualified or the _f_q_d_n
                     option is set in sudoers(4))

                 %h  expanded to the local host name without the domain name

                 %p  expanded to the name of the user whose password is being
                     requested (respects the _r_o_o_t_p_w, _t_a_r_g_e_t_p_w, and _r_u_n_a_s_p_w
                     flags in sudoers(4))

                 %U  expanded to the login name of the user the command will
                     be run as (defaults to root unless the --uu option is also
                     specified)

                 %u  expanded to the invoking user's login name

                 %%  two consecutive `%' characters are collapsed into a
                     single `%' character

                 The prompt specified by the --pp option will override the
                 system password prompt on systems that support PAM unless the
                 _p_a_s_s_p_r_o_m_p_t___o_v_e_r_r_i_d_e flag is disabled in _s_u_d_o_e_r_s.

     --rr _r_o_l_e     The --rr (_r_o_l_e) option causes the new (SELinux) security
                 context to have the role specified by _r_o_l_e.

     --SS          The --SS (_s_t_d_i_n) option causes ssuuddoo to read the password from
                 the standard input instead of the terminal device.  The
                 password must be followed by a newline character.

     --ss [_c_o_m_m_a_n_d]
                 The --ss (_s_h_e_l_l) option runs the shell specified by the SHELL
                 environment variable if it is set or the shell as specified
                 in the password database.  If a command is specified, it is
                 passed to the shell for execution via the shell's --cc option.
                 If no command is specified, an interactive shell is executed.

     --tt _t_y_p_e     The --tt (_t_y_p_e) option causes the new (SELinux) security
                 context to have the type specified by _t_y_p_e.  If no type is
                 specified, the default type is derived from the specified
                 role.

     --UU _u_s_e_r     The --UU (_o_t_h_e_r _u_s_e_r) option is used in conjunction with the --ll
                 option to specify the user whose privileges should be listed.
                 The security policy may restrict listing other users'
                 privileges.  The _s_u_d_o_e_r_s policy only allows root or a user
                 with the ALL privilege on the current host to use this
                 option.

     --uu _u_s_e_r     The --uu (_u_s_e_r) option causes ssuuddoo to run the specified command
                 as a user other than _r_o_o_t.  To specify a _u_i_d instead of a
                 _u_s_e_r _n_a_m_e, _#_u_i_d.  When running commands as a _u_i_d, many shells
                 require that the `#' be escaped with a backslash (`\').
                 Security policies may restrict _u_i_ds to those listed in the
                 password database.  The _s_u_d_o_e_r_s policy allows _u_i_ds that are
                 not in the password database as long as the _t_a_r_g_e_t_p_w option
                 is not set.  Other security policies may not support this.

     --VV          The --VV (_v_e_r_s_i_o_n) option causes ssuuddoo to print its version
                 string and the version string of the security policy plugin
                 and any I/O plugins.  If the invoking user is already root
                 the --VV option will display the arguments passed to configure
                 when ssuuddoo was built and plugins may display more verbose
                 information such as default options.

     --vv          When given the --vv (_v_a_l_i_d_a_t_e) option, ssuuddoo will update the
                 user's cached credentials, authenticating the user's password
                 if necessary.  For the _s_u_d_o_e_r_s plugin, this extends the ssuuddoo
                 timeout for another 5 minutes (or whatever the timeout is set
                 to by the security policy) but does not run a command.  Not
                 all security policies support cached credentials.

     ----          The ---- option indicates that ssuuddoo should stop processing
                 command line arguments.

     Environment variables to be set for the command may also be passed on the
     command line in the form of VVAARR=_v_a_l_u_e, e.g.
     LLDD__LLIIBBRRAARRYY__PPAATTHH=_/_u_s_r_/_l_o_c_a_l_/_p_k_g_/_l_i_b.  Variables passed on the command line
     are subject to the same restrictions as normal environment variables with
     one important exception.  If the _s_e_t_e_n_v option is set in _s_u_d_o_e_r_s, the
     command to be run has the SETENV tag set or the command matched is ALL,
     the user may set variables that would otherwise be forbidden.  See
     sudoers(4) for more information.

CCOOMMMMAANNDD EEXXEECCUUTTIIOONN
     When ssuuddoo executes a command, the security policy specifies the execution
     environment for the command.  Typically, the real and effective uid and
     gid are set to match those of the target user, as specified in the
     password database, and the group vector is initialized based on the group
     database (unless the --PP option was specified).

     The following parameters may be specified by security policy:

     oo   real and effective user ID

     oo   real and effective group ID

     oo   supplementary group IDs

     oo   the environment list

     oo   current working directory

     oo   file creation mode mask (umask)

     oo   SELinux role and type

     oo   Solaris project

     oo   Solaris privileges

     oo   BSD login class

     oo   scheduling priority (aka nice value)

   PPrroocceessss mmooddeell
     When ssuuddoo runs a command, it calls fork(2), sets up the execution
     environment as described above, and calls the execve system call in the
     child process.  The main ssuuddoo process waits until the command has
     completed, then passes the command's exit status to the security policy's
     close function and exits.  If an I/O logging plugin is configured or if
     the security policy explicitly requests it, a new  pseudo-terminal
     (``pty'') is created and a second ssuuddoo process is used to relay job
     control signals between the user's existing pty and the new pty the
     command is being run in.  This extra process makes it possible to, for
     example, suspend and resume the command.  Without it, the command would
     be in what POSIX terms an ``orphaned process group'' and it would not
     receive any job control signals.  As a special case, if the policy plugin
     does not define a close function and no pty is required, ssuuddoo will
     execute the command directly instead of calling fork(2) first.

   SSiiggnnaall hhaannddlliinngg
     Because the command is run as a child of the ssuuddoo process, ssuuddoo will
     relay signals it receives to the command.  Unless the command is being
     run in a new pty, the SIGHUP, SIGINT and SIGQUIT signals are not relayed
     unless they are sent by a user process, not the kernel.  Otherwise, the
     command would receive SIGINT twice every time the user entered control-C.
     Some signals, such as SIGSTOP and SIGKILL, cannot be caught and thus will
     not be relayed to the command.  As a general rule, SIGTSTP should be used
     instead of SIGSTOP when you wish to suspend a command being run by ssuuddoo.

     As a special case, ssuuddoo will not relay signals that were sent by the
     command it is running.  This prevents the command from accidentally
     killing itself.  On some systems, the reboot(1m) command sends SIGTERM to
     all non-system processes other than itself before rebooting the system.
     This prevents ssuuddoo from relaying the SIGTERM signal it received back to
     reboot(1m), which might then exit before the system was actually rebooted,
     leaving it in a half-dead state similar to single user mode.  Note,
     however, that this check only applies to the command run by ssuuddoo and not
     any other processes that the command may create.  As a result, running a
     script that calls reboot(1m) or shutdown(1m) via ssuuddoo may cause the system
     to end up in this undefined state unless the reboot(1m) or shutdown(1m) are
     run using the eexxeecc() family of functions instead of ssyysstteemm() (which
     interposes a shell between the command and the calling process).

     If no I/O logging plugins are loaded and the policy plugin has not
     defined a cclloossee() function, set a command timeout or required that the
     command be run in a new pty, ssuuddoo may execute the command directly
     instead of running it as a child process.

   PPlluuggiinnss
     Plugins are dynamically loaded based on the contents of the sudo.conf(4)
     file.  If no sudo.conf(4) file is present, or it contains no Plugin
     lines, ssuuddoo will use the traditional _s_u_d_o_e_r_s security policy and I/O
     logging.  See the sudo.conf(4) manual for details of the _/_e_t_c_/_s_u_d_o_._c_o_n_f
     file and the sudo_plugin(1m) manual for more information about the ssuuddoo
     plugin architecture.

EEXXIITT VVAALLUUEE
     Upon successful execution of a program, the exit status from _s_u_d_o will
     simply be the exit status of the program that was executed.

     Otherwise, ssuuddoo exits with a value of 1 if there is a
     configuration/permission problem or if ssuuddoo cannot execute the given
     command.  In the latter case the error string is printed to the standard
     error.  If ssuuddoo cannot stat(2) one or more entries in the user's PATH, an
     error is printed on stderr.  (If the directory does not exist or if it is
     not really a directory, the entry is ignored and no error is printed.)
     This should not happen under normal circumstances.  The most common
     reason for stat(2) to return ``permission denied'' is if you are running
     an automounter and one of the directories in your PATH is on a machine
     that is currently unreachable.

SSEECCUURRIITTYY NNOOTTEESS
     ssuuddoo tries to be safe when executing external commands.

     To prevent command spoofing, ssuuddoo checks "." and "" (both denoting
     current directory) last when searching for a command in the user's PATH
     (if one or both are in the PATH).  Note, however, that the actual PATH
     environment variable is _n_o_t modified and is passed unchanged to the
     program that ssuuddoo executes.

     Please note that ssuuddoo will normally only log the command it explicitly
     runs.  If a user runs a command such as sudo su or sudo sh, subsequent
     commands run from that shell are not subject to ssuuddoo's security policy.
     The same is true for commands that offer shell escapes (including most
     editors).  If I/O logging is enabled, subsequent commands will have their
     input and/or output logged, but there will not be traditional logs for
     those commands.  Because of this, care must be taken when giving users
     access to commands via ssuuddoo to verify that the command does not
     inadvertently give the user an effective root shell.  For more
     information, please see the _P_R_E_V_E_N_T_I_N_G _S_H_E_L_L _E_S_C_A_P_E_S section in
     sudoers(4).

     To prevent the disclosure of potentially sensitive information, ssuuddoo
     disables core dumps by default while it is executing (they are re-enabled
     for the command that is run).  To aid in debugging ssuuddoo crashes, you may
     wish to re-enable core dumps by setting ``disable_coredump'' to false in
     the sudo.conf(4) file as follows:

           Set disable_coredump false

     See the sudo.conf(4) manual for more information.

EENNVVIIRROONNMMEENNTT
     ssuuddoo utilizes the following environment variables.  The security policy
     has control over the actual content of the command's environment.

     EDITOR           Default editor to use in --ee (sudoedit) mode if neither
                      SUDO_EDITOR nor VISUAL is set.

     MAIL             In --ii mode or when _e_n_v___r_e_s_e_t is enabled in _s_u_d_o_e_r_s, set
                      to the mail spool of the target user.

     HOME             Set to the home directory of the target user if --ii or --HH
                      are specified, _e_n_v___r_e_s_e_t or _a_l_w_a_y_s___s_e_t___h_o_m_e are set in
                      _s_u_d_o_e_r_s, or when the --ss option is specified and _s_e_t___h_o_m_e
                      is set in _s_u_d_o_e_r_s.

     PATH             May be overridden by the security policy.

     SHELL            Used to determine shell to run with --ss option.

     SUDO_ASKPASS     Specifies the path to a helper program used to read the
                      password if no terminal is available or if the --AA option
                      is specified.

     SUDO_COMMAND     Set to the command run by sudo.

     SUDO_EDITOR      Default editor to use in --ee (sudoedit) mode.

     SUDO_GID         Set to the group ID of the user who invoked sudo.

     SUDO_PROMPT      Used as the default password prompt.

     SUDO_PS1         If set, PS1 will be set to its value for the program
                      being run.

     SUDO_UID         Set to the user ID of the user who invoked sudo.

     SUDO_USER        Set to the login name of the user who invoked sudo.

     USER             Set to the target user (root unless the --uu option is
                      specified).

     VISUAL           Default editor to use in --ee (sudoedit) mode if
                      SUDO_EDITOR is not set.

FFIILLEESS
     _/_e_t_c_/_s_u_d_o_._c_o_n_f            ssuuddoo front end configuration

EEXXAAMMPPLLEESS
     Note: the following examples assume a properly configured security
     policy.

     To get a file listing of an unreadable directory:

           $ sudo ls /usr/local/protected

     To list the home directory of user yaz on a machine where the file system
     holding ~yaz is not exported as root:

           $ sudo -u yaz ls ~yaz

     To edit the _i_n_d_e_x_._h_t_m_l file as user www:

           $ sudo -u www vi ~www/htdocs/index.html

     To view system logs only accessible to root and users in the adm group:

           $ sudo -g adm view /var/log/syslog

     To run an editor as jim with a different primary group:

           $ sudo -u jim -g audio vi ~jim/sound.txt

     To shut down a machine:

           $ sudo shutdown -r +15 "quick reboot"

     To make a usage listing of the directories in the /home partition.  Note
     that this runs the commands in a sub-shell to make the cd and file
     redirection work.

           $ sudo sh -c "cd /home ; du -s * | sort -rn > USAGE"

SSEEEE AALLSSOO
     su(1), stat(2), login_cap(3), passwd(4), sudo.conf(4), sudoers(4),
     sudo_plugin(1m), sudoreplay(1m), visudo(1m)

HHIISSTTOORRYY
     See the HISTORY file in the ssuuddoo distribution
     (http://www.sudo.ws/sudo/history.html) for a brief history of sudo.

AAUUTTHHOORRSS
     Many people have worked on ssuuddoo over the years; this version consists of
     code written primarily by:

           Todd C. Miller

     See the CONTRIBUTORS file in the ssuuddoo distribution
     (http://www.sudo.ws/sudo/contributors.html) for an exhaustive list of
     people who have contributed to ssuuddoo.

CCAAVVEEAATTSS
     There is no easy way to prevent a user from gaining a root shell if that
     user is allowed to run arbitrary commands via ssuuddoo.  Also, many programs
     (such as editors) allow the user to run commands via shell escapes, thus
     avoiding ssuuddoo's checks.  However, on most systems it is possible to
     prevent shell escapes with the sudoers(4) plugin's _n_o_e_x_e_c functionality.

     It is not meaningful to run the cd command directly via sudo, e.g.,

           $ sudo cd /usr/local/protected

     since when the command exits the parent process (your shell) will still
     be the same.  Please see the _E_X_A_M_P_L_E_S section for more information.

     Running shell scripts via ssuuddoo can expose the same kernel bugs that make
     setuid shell scripts unsafe on some operating systems (if your OS has a
     /dev/fd/ directory, setuid shell scripts are generally safe).

BBUUGGSS
     If you feel you have found a bug in ssuuddoo, please submit a bug report at
     http://www.sudo.ws/sudo/bugs/

SSUUPPPPOORRTT
     Limited free support is available via the sudo-users mailing list, see
     http://www.sudo.ws/mailman/listinfo/sudo-users to subscribe or search the
     archives.

DDIISSCCLLAAIIMMEERR
     ssuuddoo is provided ``AS IS'' and any express or implied warranties,
     including, but not limited to, the implied warranties of merchantability
     and fitness for a particular purpose are disclaimed.  See the LICENSE
     file distributed with ssuuddoo or http://www.sudo.ws/sudo/license.html for
     complete details.

Sudo 1.8.7                      March 13, 2013                      Sudo 1.8.7
